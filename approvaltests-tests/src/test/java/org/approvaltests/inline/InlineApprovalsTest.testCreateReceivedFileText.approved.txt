Substitution


******
  @Test
  public void testyMctest() {
    var expected = """
        Hello World***
        """;
    Approvals.verify("", Options.inline(expected));
  }

Becomes:
  @Test
  public void testyMctest() {
    var expected = """
      1
      2
      """;
    Approvals.verify("", Options.inline(expected));
  }

******
  @Test
  public void testyMctest () {
    var expected = """
        Hello World***
        """;
    Approvals.verify("", Options.inline(expected));
  }

Becomes:
  @Test
  public void testyMctest () {
    var expected = """
      1
      2
      """;
    Approvals.verify("", Options.inline(expected));
  }

******
	@Test
	public void testyMctest()
	{
		Approvals.verify("", Options.inline(expected));
	}

Becomes:
	@Test
	public void testyMctest()
	{
		var expected = """
			1
			2
			""";
		Approvals.verify("", Options.inline(expected));
	}

******
  @Test
  public void testyMctest()
  {
    var expected = """
        Hello World***
        """;
    Approvals.verify("", Options.inline(expected));
  }

Becomes:
  @Test
  public void testyMctest()
  {
    var expected = """
      1
      2
      """;
    Approvals.verify("", Options.inline(expected));
  }

******
  @Test
  public void testyMctest(int foo) {
    var expected = """
        Hello World***
        """;
    Approvals.verify("", Options.inline(expected));
  }

Becomes:
  @Test
  public void testyMctest(int foo) {
    var expected = """
      1
      2
      """;
    Approvals.verify("", Options.inline(expected));
  }

******
  @Test
  void testyMctest() {
      Customer customer = Customer.create()
          .existingCustomer()
          .speakingEnglish()
          .build();
      stateService.save(TestUtils.userId().build(), customer);
      var expected = """
          [Customer]: account lookup
          [     Bot]: Hi there!
          [     Bot]: Let me try to help.
          [     Bot]: routes to '12345'
          """;
      verifyConversation(expected, "account lookup");
  }

Becomes:
  @Test
  void testyMctest() {
      Customer customer = Customer.create()
          .existingCustomer()
          .speakingEnglish()
          .build();
      stateService.save(TestUtils.userId().build(), customer);
    var expected = """
      1
      2
      """;
      verifyConversation(expected, "account lookup");
  }

